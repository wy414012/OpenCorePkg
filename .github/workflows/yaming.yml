name: CI

on:
  push:
  pull_request:
  workflow_dispatch:
  release:
    types: [published]

env:
  PROJECT_TYPE: OC-D
  FORCE_INSTALL: 1
  HAS_OPENSSL_BUILD: 1
  HAS_OPENSSL_W32BUILD: 0
  WERROR: 1

jobs:
  build-macos:
    name: 使用 Xcode-latest
    runs-on: macos-12
    env:
      JOB_TYPE: BUILD
    steps:
      - uses: actions/checkout@v3

      - name: 安装Linux工具链
        run: brew tap FiloSottile/homebrew-musl-cross

      - name: 安装Linux工具
        run: brew install musl-cross
        env:
          HOMEBREW_NO_INSTALL_CLEANUP: 1
          HOMEBREW_NO_AUTO_UPDATE: 1

      - name: 安装依赖
        run: brew install openssl mingw-w64
        env:
          HOMEBREW_NO_INSTALL_CLEANUP: 1
          HOMEBREW_NO_AUTO_UPDATE: 1

      - name: CI Bootstrap
        run: |
          src=$(/usr/bin/curl -Lfs https://raw.githubusercontent.com/wy414012/ocbuild/Yaming/ci-bootstrap.sh) && eval "$src" || exit 1

      - run: ./build_duet.tool
      - run: ./build_oc.tool

      - name: 打包上传工作件
        uses: actions/upload-artifact@v3
        with:
          name: OpenCore_macOS_build
          path: Binaries/*.zip

      - name: 上传发布版本
        if: github.event_name == 'release'
        uses: svenstaro/upload-release-action@483c1e56f95e88835747b1c7c60581215016cbf2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: Binaries/*.zip
          tag: ${{ github.ref }}
          file_glob: true
  build-linux:
    name: linux-CLANGPDB/GCC5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: 安装依赖环境
        run: |
          sudo apt-get update
          sudo apt-get install nasm uuid-dev libssl-dev iasl
          file="clang+llvm-13.0.0-x86_64-linux-gnu-ubuntu-20.04"
          suf=".tar.xz"
          curl -LO "https://github.com/llvm/llvm-project/releases/download/llvmorg-13.0.0/${file}${suf}" || exit 1
          sum=$(shasum -a 256 "${file}${suf}" | cut -f1 -d' ')
          expsum="2c2fb857af97f41a5032e9ecadf7f78d3eff389a5cd3c9ec620d24f134ceb3c8"
          if [ "$sum" != "$expsum" ]; then echo "Invalid checksum $sum" ; exit 1 ; fi
          tar -xf "${file}${suf}" || exit 1
          echo "$(pwd)/${file}/bin" >> $GITHUB_PATH
      - name: CI Bootstrap
        run: |
          src=$(/usr/bin/curl -Lfs https://raw.githubusercontent.com/wy414012/ocbuild/Yaming/ci-bootstrap.sh) && eval "$src" || exit 1
      - run: ./build_duet.tool
      - run: ./build_oc.tool

      - name: 打包上传构建工件
        uses: actions/upload-artifact@v3
        with:
          name: OpenCore_Linux_build
          path: Binaries/*.zip

  build-windows:
    name: Windows VS2022
    runs-on: windows-latest
    env:
      HAS_OPENSSL_BUILD: 0
      CC: gcc
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v3

      - name: 安装依赖
        run: |
          choco install make nasm zip --no-progress
          choco install iasl --no-progress --version=2017.11.10

      - name: CI 引导
        run: |
          src=$(curl -Lfs https://raw.githubusercontent.com/wy414012/ocbuild/Yaming/ci-bootstrap.sh) && eval "$src" || exit 1

      - run: ./build_duet.tool
      - run: ./build_oc.tool

      - name: 打包上传构建工件
        uses: actions/upload-artifact@v3
        with:
          name: Windows_build_OpenCore
          path: Binaries/*.zip
