name: CI

on:
  push:
  pull_request:
  workflow_dispatch:
  release:
    types: [published]

env:
  PROJECT_TYPE: UEFI
  FORCE_INSTALL: 1
  HAS_OPENSSL_BUILD: 1
  HAS_OPENSSL_W32BUILD: 0
  WERROR: 1

jobs:
  build-macos:
    name: 使用macOS Xcode13.0构建
    runs-on: macos-11
    env:
      JOB_TYPE: BUILD
    steps:
      - uses: actions/checkout@v2

      - name: 安装Linux工具链
        run: brew tap FiloSottile/homebrew-musl-cross

      - name: 安装Linux工具
        run: brew install musl-cross
        env:
          HOMEBREW_NO_INSTALL_CLEANUP: 1
          HOMEBREW_NO_AUTO_UPDATE: 1

      - name: 安装依赖
        run: brew install openssl mingw-w64
        env:
          HOMEBREW_NO_INSTALL_CLEANUP: 1
          HOMEBREW_NO_AUTO_UPDATE: 1

      - name: CI Bootstrap
        run: |
          src=$(/usr/bin/curl -Lfs https://raw.githubusercontent.com/wy414012/ocbuild/Yaming/ci-bootstrap.sh) && eval "$src" || exit 1

      - run: ./build_duet.tool
      - run: ./build_oc.tool

      - name: 打包上传工作件
        uses: actions/upload-artifact@v2
        with:
          name: OpenCore_macOS_build
          path: Binaries/*.zip

      - name: 上传发布版本
        if: github.event_name == 'release'
        uses: svenstaro/upload-release-action@483c1e56f95e88835747b1c7c60581215016cbf2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: Binaries/*.zip
          tag: ${{ github.ref }}
          file_glob: true
  build-linux:
    name: linux-clang构建
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: 安装依赖环境
        run: |
          sudo apt-get update
          sudo apt-get install nasm uuid-dev libssl-dev iasl
          file="clang+llvm-13.0.0-x86_64-linux-gnu-ubuntu-20.04"
          suf=".tar.xz"
          curl -LO "https://github.com/llvm/llvm-project/releases/download/llvmorg-13.0.0/${file}${suf}" || exit 1
          sum=$(shasum -a 256 "${file}${suf}" | cut -f1 -d' ')
          expsum="2c2fb857af97f41a5032e9ecadf7f78d3eff389a5cd3c9ec620d24f134ceb3c8"
          if [ "$sum" != "$expsum" ]; then echo "Invalid checksum $sum" ; exit 1 ; fi
          tar -xf "${file}${suf}" || exit 1
          echo "$(pwd)/${file}/bin" >> $GITHUB_PATH
      - name: CI Bootstrap
        run: |
          src=$(/usr/bin/curl -Lfs https://raw.githubusercontent.com/wy414012/ocbuild/Yaming/ci-bootstrap.sh) && eval "$src" || exit 1
      - run: ./build_duet.tool
      - run: ./build_oc.tool

      - name: Upload to Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: OpenCore_Linux_build
          path: Binaries/*.zip
      - name: 上传发布版本
        if: github.event_name == 'release'
        uses: svenstaro/upload-release-action@483c1e56f95e88835747b1c7c60581215016cbf2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: Binaries/*.zip
          tag: ${{ github.ref }}
          file_glob: true
  analyze-scripts:
    name: 分析脚本
    runs-on: macos-11
    env:
      JOB_TYPE: ANALYZE
    steps:
      - uses: actions/checkout@v2

      - name: Install Dependencies
        run: |
          brew install shellcheck
          pip2 install pyyaml
        env:
          HOMEBREW_NO_INSTALL_CLEANUP: 1

      - name: CI Bootstrap
        run: |
          src=$(/usr/bin/curl -Lfs https://raw.githubusercontent.com/wy414012/ocbuild/Yaming/ci-bootstrap.sh) && eval "$src" || exit 1
      - name: Run shellcheck
        run: find . \( -name "*.tool" -o -name "*.command" -o -name "*.sh" \) -exec sh -c 'for TargetFile; do shellcheck --severity=info "${TargetFile}" || exit 1; done' sh {} +

      - name: Check AppleModels
        working-directory: AppleModels
        run: |
          pwd
          ls
          python2 ./update_generated.py  || exit 1
          if [ "$(git status --porcelain)" != "" ]; then echo "DataBase desync"; exit 1 ; fi
      - name: Lint Samples
        run: |
          File='Docs/Sample.plist'
          plutil -lint "${File}" || exit 1
          /usr/libexec/PlistBuddy -c 'Save' "${File}"
          awk ' /<data>$/     {inside=1; printf $0; next}
                /<\/data>$/   {inside=0; print "</data>"; next}
                inside        {gsub ("\t", "", $0); printf $0; next}
                              {print}' "${File}" > "${File}.tmp" && mv "${File}.tmp" "${File}"
          if [ "$(git diff ${File})" != '' ]; then echo "Not in Xcode style or not in alphabetical order!!"; exit 1 ; fi
          File='Docs/SampleCustom.plist'
          plutil -lint "${File}" || exit 1
          /usr/libexec/PlistBuddy -c 'Save' "${File}"
          awk ' /<data>$/     {inside=1; printf $0; next}
                /<\/data>$/   {inside=0; print "</data>"; next}
                inside        {gsub ("\t", "", $0); printf $0; next}
                              {print}' "${File}" > "${File}.tmp" && mv "${File}.tmp" "${File}"
          if [ "$(git diff ${File})" != '' ]; then echo "Not in Xcode style or not in alphabetical order!!"; exit 1 ; fi